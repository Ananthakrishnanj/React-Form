{"version":3,"sources":["components/Register.js","constants/RoutePath.js","shared/Slider.js","constants/Data.js","components/CreateForm.js","components/SubmitForm.js","components/Error.js","App.js","serviceWorker.js","redux/Rootreducer.js","index.js"],"names":["Register","className","to","Slider","props","type","min","max","value","age","onChange","event","target","changeParentValue","id","interestsData","label","countries","states","countryID","addressTypes","CreateForm","useState","setAge","firstName","secondName","name","setName","address1","address2","address","setAddress","email","setEmail","telephone","setTelephone","country","setCountry","state","setState","interests","setInterests","addressType","setAddressType","subscribe","setSubscribe","image","setImage","error","setError","imageError","setImageError","firstNameError","setFirstNameError","selector","useSelector","formData","navigate","useHistory","dispatch","useDispatch","uploadPhoto","e","preventDefault","uploadSingleFile","URL","createObjectURL","files","useEffect","onSubmit","console","log","payload","regex","length","test","push","validateForm","src","alt","height","width","accept","placeholder","onClick","style","color","class","required","classNamePrefix","options","filter","item","isMulti","checked","SubmitForm","goBack","map","interest","index","Error","App","path","component","exact","Boolean","window","location","hostname","match","initialState","undefined","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ca94cfcf.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport { CreateFormPath } from '../constants/RoutePath';\r\n\r\nfunction Register() {\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center min-vh-100\">\r\n            <Link className=\"btn btn-primary btn-lg\" to={CreateFormPath}>Register</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","export const HomePath = \"/\";\r\nexport const CreateFormPath = \"/create\";\r\nexport const SubmitFormPath = \"/submit\";","import React, { useEffect } from 'react';\r\nimport '../styles/slider.css';\r\nimport { useState } from 'react';\r\n\r\nfunction Slider(props) {    \r\n\r\n    const changeParentValue = (value) => {        \r\n        props.changeParentValue(value);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"slidecontainer\">\r\n            <input type=\"range\" min={props.min} max={props.max} value={props.age} onChange={(event) => changeParentValue(event.target.value)} className=\"slider\" id=\"myRange\"/>           \r\n            <div className=\"d-flex justify-content-between\">\r\n                <div>13-19</div>\r\n                <div>20-29</div>\r\n                <div>30-45</div>\r\n                <div>45 & Above</div>\r\n            </div>      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slider;\r\n","export const interestsData = [{value: 'Hockey', label: 'Hockey'}, {value: 'Football', label: 'Football'},  {value: 'Reading', label: 'Reading'}];\r\nexport const countries = [{value: 'India', label: 'India'}, {value: 'United States of America', label: 'United States of America'}];\r\nexport const states = [\r\n    {countryID: 'India', states: [{value: 'Andra Pradesh', label: 'Andra Pradesh'}, {value: 'Kerala', label: 'Kerala'}]},\r\n    {countryID: 'United States of America', states: [{value: 'Texas', label: 'Texas'}, {value: 'New Mexico', label: 'New Mexico'}]}                        \r\n    ];\r\nexport const addressTypes = [{value: 'Home', label: 'Home'}, {value: 'Company', label: 'Company'}];","import React, { useState, useEffect } from 'react'\r\nimport Slider from '../shared/Slider';\r\nimport Select from 'react-select';\r\nimport '../styles/createform.css';\r\nimport { countries, states, addressTypes, interestsData } from '../constants/Data';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction CreateForm() {\r\n    const [age, setAge] = useState(13);\r\n    const [name, setName] = useState({ firstName: '', secondName: '' });\r\n    const [address, setAddress] = useState({ address1: '', address2: '' });\r\n    const [email, setEmail] = useState();\r\n    const [telephone, setTelephone] = useState();\r\n    const [country, setCountry] = useState();\r\n    const [state, setState] = useState();\r\n    const [interests, setInterests] = useState([]);\r\n    const [addressType, setAddressType] = useState();\r\n    const [subscribe, setSubscribe] = useState(false);\r\n    const [image, setImage] = useState(null);\r\n    const [error, setError] = useState(false);\r\n    const [imageError, setImageError] = useState(false);\r\n    const [firstNameError, setFirstNameError] = useState(false);\r\n    let selector = useSelector(state => state.formData);\r\n    const navigate = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (selector) {\r\n            setAge(selector.age);\r\n            setName(selector.name);\r\n            setEmail(selector.email);\r\n            setAddress(selector.address);\r\n            setTelephone(selector.telephone);\r\n            setCountry(selector.country);\r\n            setState(selector.state);\r\n            setInterests(selector.interests);\r\n            setAddressType(selector.addressType);\r\n            setSubscribe(selector.subscribe);\r\n            setImage(selector.image);\r\n        }\r\n    }, []);\r\n\r\n    let validateForm = () => {\r\n        console.log(\"Validation form\");\r\n        const formData = { age, name, address, email, telephone, country, state, interests, addressType, subscribe, image };\r\n        dispatch({ type: 'UPDATE_FORM_DATA', payload: formData });\r\n        let regex = /^([a-zA-Z_-]){0,20}$/;\r\n\r\n        \r\n        if (country && state && interests.length > 0 && addressType && image && regex.test(name.firstName)) {\r\n            navigate.push('/submit');\r\n            setError(false);\r\n            setImageError(false);\r\n        }\r\n        else {\r\n            if (image) {\r\n                setError(true);\r\n            }\r\n            else {\r\n                setImageError(true);\r\n            }\r\n        }\r\n\r\n        if (!(regex.test(name.firstName))) {\r\n            setFirstNameError(true);\r\n        }\r\n        else {\r\n            setFirstNameError(false);\r\n        }\r\n    }\r\n\r\n    function uploadPhoto(e) {\r\n        e.preventDefault()\r\n    }\r\n\r\n    function uploadSingleFile(e) {\r\n        setImage(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container d-flex justify-content-center align-items-center min-vh-100\">\r\n            <form onSubmit={(e) => { e.preventDefault(); validateForm() }}>\r\n                <div className=\"row\">\r\n\r\n\r\n                    <div className=\"col-sm-3 text-center\">\r\n                        {image &&\r\n                            <div>\r\n                                <div className=\"form-group\">\r\n                                    <img src={image} alt='' height=\"150px\" width=\"150px\" />\r\n                                </div>\r\n                                <input type=\"file\" accept=\"image/*\" className=\"form-control\" placeholder=\"Upload your photo\" onChange={uploadSingleFile} />\r\n                                <button onClick={uploadPhoto} className=\"btn btn-link\">Edit Photo</button>\r\n                            </div>\r\n                        }\r\n                        {!image &&\r\n                            <div>\r\n                                <div className=\"upload-button\">\r\n                                    <input type=\"file\" accept=\"image/*\" className=\"form-control\" placeholder=\"Upload your photo\" onChange={uploadSingleFile} />\r\n                                    <button onClick={uploadPhoto} className=\"btn btn-link text-white\">Upload your photo</button>\r\n                                </div>\r\n                                <div className=\"upload-photo\" onClick={uploadPhoto}>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        {imageError && !image &&\r\n                            <div style={{ color: 'red' }}>Photo is required</div>\r\n                        }\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-sm-9 content-border\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row form-group\">\r\n                                {error &&\r\n                                    <div style={{ color: 'red' }} class=\"col-sm-12 offset-sm-3\">All field in '*' are mandatory</div>\r\n                                }\r\n                                {firstNameError && \r\n                                <div style={{ color: 'red' }} class=\"col-sm-12 offset-sm-3\">First name should contain only aplhabets with maximum of 20 charcters</div>\r\n                                }\r\n\r\n                            </div>\r\n                            <div className=\"row form-group\">\r\n                                <div className=\"col-sm-3 text-right\">\r\n                                    <span className=\"badge badge-default\">Name</span>\r\n                                </div>\r\n                                <div className=\"col-sm-9\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <input required type=\"text\" placeholder=\"First Name\" className=\"form-control\" value={name.firstName} onChange={(event) => setName({ ...name, firstName: event.target.value })} />\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <input required type=\"text\" placeholder=\"Second Name\" className=\"form-control\" value={name.secondName} onChange={(event) => setName({ ...name, secondName: event.target.value })} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row form-group\">\r\n                                <div className=\"col-sm-3 text-right\">\r\n                                    <span className=\"badge\">Age</span>\r\n                                </div>\r\n                                <div className=\"col-sm-9\">\r\n                                    <Slider age={age} min={13} max={45} changeParentValue={(age) => setAge(age)}></Slider>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"row form-group\">\r\n                                        <div className=\"col-sm-3 text-right\">\r\n                                            <span className=\"badge badge-default\">Email</span>\r\n                                        </div>\r\n                                        <div className=\"col-sm-9\">\r\n                                            <input required type=\"email\" className=\"form-control\" value={email} onChange={(event) => setEmail(event.target.value)} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"row form-group\">\r\n                                        <div className=\"col-sm-3 text-right\">\r\n                                            <span className=\"badge badge-default\">Telephone</span>\r\n                                        </div>\r\n                                        <div className=\"col-sm-9\">\r\n                                            <input required type=\"text\" className=\"form-control\" value={telephone} onChange={(event) => setTelephone(event.target.value)} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"row form-group\">\r\n                                        <div className=\"col-sm-3 text-right\">\r\n                                            <span className=\"badge badge-default\">State</span>\r\n                                        </div>\r\n                                        <div className=\"col-sm-9\">\r\n                                            <Select\r\n                                                className=\"basic-single\"\r\n                                                value={{ value: state, label: state }}\r\n                                                classNamePrefix=\"select\"\r\n                                                name=\"State\"\r\n                                                options={states.filter(item => item.countryID === country)[0]?.states}\r\n                                                onChange={(event) => setState(event.value)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"row form-group\">\r\n                                        <div className=\"col-sm-3 text-right\">\r\n                                            <span className=\"badge badge-default\">Country</span>\r\n                                        </div>\r\n                                        <div className=\"col-sm-9\">\r\n                                            <Select\r\n                                                className=\"basic-single\"\r\n                                                value={{ value: country, label: country }}\r\n                                                classNamePrefix=\"select\"\r\n                                                name=\"Country\"\r\n                                                options={countries}\r\n                                                onChange={(event) => setCountry(event.value)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"row form-group\">\r\n                                        <div className=\"col-sm-3 text-right\">\r\n                                            <span className=\"badge badge-default\">Address</span>\r\n                                        </div>\r\n                                        <div className=\"col-sm-9\">\r\n                                            <Select\r\n                                                className=\"basic-single\"\r\n                                                value={{ value: addressType, label: addressType }}\r\n                                                classNamePrefix=\"select\"\r\n                                                placeholder=\"Select country\"\r\n                                                name=\"Country\"\r\n                                                options={addressTypes}\r\n                                                onChange={(event) => setAddressType(event.value)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                addressType === 'Home' &&\r\n                                <div className=\"row form-group\">\r\n                                    <div className=\"col-sm-3 text-right\">\r\n                                        <span className=\"badge badge-default\">Home Address</span>\r\n                                    </div>\r\n                                    <div className=\"col-sm-9\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <input required type=\"text\" placeholder=\"Address 1\" className=\"form-control\" value={address.address1} onChange={(event) => setAddress({ ...address, address1: event.target.value })} />\r\n                                            </div>\r\n                                            <div className=\"col-sm-6\">\r\n                                                <input required type=\"text\" placeholder=\"Address 2\" className=\"form-control\" value={address.address2} onChange={(event) => setAddress({ ...address, address2: event.target.value })} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                addressType === 'Company' &&\r\n                                <div className=\"row form-group\">\r\n                                    <div className=\"col-sm-3 text-right\">\r\n                                        <span className=\"badge badge-default\">Company Address</span>\r\n                                    </div>\r\n                                    <div className=\"col-sm-9\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <input required type=\"text\" placeholder=\"Company Address 1\" className=\"form-control\" value={address.address1} onChange={(event) => setAddress({ ...address, address1: event.target.value })} />\r\n                                            </div>\r\n                                            <div className=\"col-sm-6\">\r\n                                                <input required type=\"text\" placeholder=\"Company Address 2\" className=\"form-control\" value={address.address2} onChange={(event) => setAddress({ ...address, address2: event.target.value })} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"row form-group\">\r\n                                        <div className=\"col-sm-3 text-right\">\r\n                                            <span className=\"badge badge-default\">Interests</span>\r\n                                        </div>\r\n                                        <div className=\"col-sm-9\">\r\n                                            <Select\r\n                                                className=\"basic-single\"\r\n                                                classNamePrefix=\"select\"\r\n                                                name=\"Country\"\r\n                                                value={interests}\r\n                                                options={interestsData}\r\n                                                isMulti\r\n                                                onChange={(value) => { setInterests(value) }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-3 text-right\">\r\n                                    <input type=\"checkbox\" checked={subscribe} onChange={(event) => setSubscribe(event.target.checked)} />\r\n                                </div>\r\n                                <div className=\"col-sm-9\">\r\n                                    <span>Subscribe to the news letter</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"text-right\">\r\n                                        <button className=\"btn btn-primary btn-lg\" type=\"submit\">Submit</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateForm;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport '../styles/submitform.css';\r\n\r\nfunction SubmitForm() {    \r\n    const dispatch = useDispatch();\r\n    let selector = useSelector(state => state.formData);\r\n    const navigate = useHistory();\r\n    \r\n    if (!selector) {\r\n        navigate.goBack();\r\n    }\r\n\r\n    function goBack() {\r\n        navigate.goBack();\r\n    }\r\n\r\n    function uploadPhoto (e) {\r\n        e.preventDefault()        \r\n    }\r\n\r\n    function uploadSingleFile(e) {        \r\n        dispatch({type : 'UPDATE_FORM_DATA', payload : {...selector, image: URL.createObjectURL(e.target.files[0])}});        \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container d-flex justify-content-center align-items-center min-vh-100\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-3 text-center\">\r\n                    {selector.image &&\r\n                        <div>\r\n                            <div className=\"form-group\">\r\n                                <img src={selector.image} alt='' height=\"150px\" width=\"150px\" />\r\n                            </div>\r\n                            <input type=\"file\" accept=\"image/*\" className=\"form-control\" placeholder=\"Upload your photo\" onChange={uploadSingleFile}/>\r\n                            <button className=\"btn btn-link\" onClick={uploadPhoto}>Edit photo</button>\r\n                        </div>\r\n                    }\r\n                    <button className=\"btn btn-link\" onClick={goBack}>Edit profile</button>\r\n                </div>\r\n                <div className=\"col-sm-9 content-border\">\r\n                    I am <span className=\"data-item\">{selector.name.firstName} {selector.name.secondName}</span> and I am <span className=\"data-item\">above {selector.age} years</span> and you can send your emails to <span className=\"data-item\">{selector.email}</span>,\r\n                    I lives in the state of {selector.state} .I likes to play&nbsp;\r\n                    {selector.interests.map((interest, index) => {                    \r\n                    return (\r\n                        <span className=\"data-item\">\r\n                            {interest.label}\r\n                            {index != selector.interests.length -1 && <span>, </span>}\r\n                        </span>\r\n                    )\r\n                    })}.\r\n                    {selector.subscribe && <span>And please send me the news letters.</span>} Please reach out to me on my phone <span className=\"data-item\">{selector.telephone}</span>.\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"text-center mt-5\">\r\n                                <button className=\"btn btn-primary btn-lg\" type=\"button\" onClick={goBack}>Agree</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubmitForm;\r\n","import React from 'react'\r\n\r\nfunction Error() {\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center min-vh-100\">\r\n            <h1>404. Not Found!</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Register from './components/Register';\nimport CreateForm from './components/CreateForm';\nimport SubmitForm from './components/SubmitForm';\nimport Error from './components/Error';\nimport { HomePath, CreateFormPath, SubmitFormPath } from './constants/RoutePath';\n\n\nfunction App() {\n\n  return (    \n      <Router>\n        <Switch>\n          <Route path={HomePath} component={Register} exact />\n          <Route path={CreateFormPath} component={CreateForm} />\n          <Route path={SubmitFormPath} component={SubmitForm} />\n          <Route component={Error} />\n        </Switch>\n      </Router>    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    formData: undefined\r\n}\r\n\r\nexport default function rootReducer(state = initialState, action) {\r\n    console.log(\"Action data : \", action);\r\n    switch(action.type) {\r\n        case \"UPDATE_FORM_DATA\":                         \r\n            return {...state, formData: action.payload};            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './redux/Rootreducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}